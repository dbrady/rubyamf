#this file is a template that is read, tokens are replaced with either default values, or commandline args.
#the tmp config file is then written to rubyamf_core/tmp/configs

server.modules = ("mod_access","mod_accesslog","mod_fastcgi", "mod_expire")
server.pid-file = "/Users/aaronsmith/dev/ruby/rubyamf/rubyamf_1.0_candidate/lib/rubyamf_core/tmp/pids/lighttpd.pid"
server.port = 8024
server.bind = "127.0.0.1"
server.errorlog = "/Users/aaronsmith/dev/ruby/rubyamf/rubyamf_1.0_candidate/lib/rubyamf_core/logs/lighttpd.error.log"
accesslog.filename = "/Users/aaronsmith/dev/ruby/rubyamf/rubyamf_1.0_candidate/lib/rubyamf_core/logs/lighttpd.access.log"
#expire.url = ("/" => "access now")
server.document-root = "/Users/aaronsmith/dev/ruby/rubyamf/rubyamf_1.0_candidate/lib/public/"
static-file.exclude-extensions = (".pid","^rubyamf_sid") #make sure session files can't be served

#setup the FastCGI spawning
fastcgi.server = ( ".rb" => ( "localhost" => (
		"socket" => "/Users/aaronsmith/dev/ruby/rubyamf/rubyamf_1.0_candidate/lib/rubyamf_core/tmp/sockets/rubyamf.socket",
    "bin-path" => "/Users/aaronsmith/dev/ruby/rubyamf/rubyamf_1.0_candidate/lib/rubyamf_core/dispatcher.rb",
    "min-procs" => 1,
    "max-procs" => 20
)))

$HTTP["url"] =~ "^/services"{ #deny direct access to rubyamf_core/tmp directory
	url.access-deny = ("")
}
